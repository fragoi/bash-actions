#!/bin/bash

. setEnv

declare -A __SHARED_VARS

declareSharedVars() {
  getSharedVars "$@"
  __sharedVars_allow "$@"
  __sharedVars_unset "$@"
}

getSharedVars() {
  ## read file as local vars
  if [ -e "$SHARED_VARS_FILE" ]; then
    . "$SHARED_VARS_FILE"
  fi
  ## export vars
  local __sharedVars_var
  local __sharedVars_prv
  local __sharedVars_dec
  for __sharedVars_var; do
    __sharedVars_prv="__SHAREDVARS__${__sharedVars_var}"
    if __sharedVars_isSet "$__sharedVars_prv"; then
      __sharedVars_dec=$(declare -p "$__sharedVars_prv")
      __sharedVars_pub __sharedVars_dec __sharedVars_var
      ## declare var as global
      eval "${__sharedVars_dec/#'declare '/'declare -g '}"
    fi
  done
}

setSharedVars() {
  if ! __sharedVars_allowed "$@"; then
    return 1
  fi
  local __sharedVars_var
  local __sharedVars_dec
  for __sharedVars_var; do
    if __sharedVars_isSet "$__sharedVars_var"; then
      __sharedVars_dec=$(declare -p "$__sharedVars_var")
      __sharedVars_prv __sharedVars_dec __sharedVars_var
      echo "$__sharedVars_dec" >> "$SHARED_VARS_FILE"
    fi
  done
}

setSharedVar() {
  declare "$1"="$2"
  setSharedVars "$1"
}

__sharedVars_unset() {
  local var
  for var; do
    echo "unset __SHAREDVARS__${var}" >> "$SHARED_VARS_FILE"
  done
}

## allows variables
__sharedVars_allow() {
  local var
  for var; do
    __SHARED_VARS[$var]=1
  done
}

## checks variables are allowed
__sharedVars_allowed() {
  local var
  for var; do
    if ! [ ${__SHARED_VARS[$var]} ]; then
      return 1
    fi
  done
}

## checks variable is set (can be empty)
__sharedVars_isSet() {
  [ ${!1+'x'} ]
}

__sharedVars_prv() {
  local -n __dec=$1
  local -n __var=$2
  __dec=${__dec/" ${__var}="/" __SHAREDVARS__${__var}="}
}

__sharedVars_pub() {
  local -n __dec=$1
  local -n __var=$2
  __dec=${__dec/" __SHAREDVARS__${__var}="/" ${__var}="}
}
